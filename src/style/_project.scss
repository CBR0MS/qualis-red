/*
A simple little SCSS mixin for creating scrim gradients
Inspired by Andreas Larson - https://github.com/larsenwork
https://css-tricks.com/easing-linear-gradients/

Forked from https://codepen.io/joeyquarters/pen/dWJYdV
Ease-in-out-sine values from https://codepen.io/larsenwork/pen/dvBrMv
*/

@mixin scrimGradient(
    $startColor: $body-light,
    $direction: "to bottom",
    $ease: "ease-in-out",
    $offsetStart: 0,
    $offsetEnd: 100
) {
    // ease out
    $scrimCoordinatesEaseOut: (
        0: 1,
        19: 0.738,
        34: 0.541,
        47: 0.382,
        56.5: 0.278,
        65: 0.194,
        73: 0.126,
        80.2: 0.075,
        86.1: 0.042,
        91: 0.021,
        95.2: 0.008,
        98.2: 0.002,
        100: 0
    );

    // ease in out
    $scrimCoordinatesEaseInOutSine: (
        0: 1,
        9.5: 0.978,
        17.7: 0.925,
        24.7: 0.857,
        31: 0.781,
        36.8: 0.701,
        42.3: 0.62,
        47.6: 0.538,
        52.9: 0.455,
        58.2: 0.373,
        63.7: 0.291,
        69.5: 0.212,
        75.8: 0.138,
        82.9: 0.07,
        91.2: 0.019,
        100: 0
    );

    $hue: hue($startColor);
    $saturation: saturation($startColor);
    $lightness: lightness($startColor);
    $stops: ();
    $scrimCoordinates: $scrimCoordinatesEaseOut;

    @if $ease == "ease-in-out-sine" {
        $scrimCoordinates: $scrimCoordinatesEaseInOutSine;
    }

    @each $colorStop, $alphaValue in $scrimCoordinates {
        $stop: hsla($hue, $saturation, $lightness, $alphaValue)
            percentage(
                (
                        ($offsetEnd - $offsetStart) *
                            $colorStop/100 +
                            $offsetStart
                    )/100
            );
        $stops: append($stops, $stop, comma);
    }

    background: linear-gradient(unquote($direction), $stops);
}

.project-container {
    // width: 100vw;
    background-color: $body;
    margin: $nav-height + 20px auto;
    margin-bottom: 0;
    text-align: center;
}

.project-post-content {
    margin: 0 auto;
    padding-bottom: 30px;
    text-align: left;
    max-width: 1000px;
}

.project-post-section {
    //font-family: minion-pro;
    font-family: $serif-font;
    font-size: 110%;
    font-weight: 500;
    // line-height: 25px;
    color: $body;
    padding: 20px;
    background-color: $content;
    border-radius: $radius;
    box-shadow: $shadow;
    margin: 0 auto;
    width: 82%;
    min-width: 335px;
    margin-bottom: 80px;

    ::selection {
        color: $content;
    }
}
h1,
h2,
h3,
h4,
h5,
h6 {
    max-width: 650px;
    margin: 20px auto;
    margin-top: 60px;
}
p {
    // text-align: justify;
    max-width: 650px;
    // float: right;
    margin: 20px auto;
}

.post-head-wrapper {
    width: 100vw;
    @include scrimGradient($body-light, "to top", "ease-in-out-sine", 10, 100);
}

.post-content-wrapper {
    width: 100vw;
    background-color: $body-light;
}

.project-head {
    min-height: 100px;
}

.page-head {
    max-width: 1000px;
    width: 85%;
    margin: 0 auto;
    padding: 20px;
}

h1.page-head {
    font-size: 3rem;
    font-weight: 600;
}

p.page-head {
    color: $sec-type;
    font-size: 1.4rem;
    font-style: italic;
}

.project-image-container {
    max-width: 1000px;
    width: 85%;
    //padding: 20px;
    border-radius: $radius;
    //   box-shadow: $shadow;
    object-fit: cover;
    margin: 30px auto;
}

.project-link {
    display: inline-block;
    margin: 0 15px 0 0;
    width: 100px;
}

.project-details-container {
    display: flex;
    flex-flow: row wrap;
    justify-content: space-between;
    align-items: flex-start;
    max-width: 600px;
    padding: 20px;
    margin: 0 auto;
    text-align: left;
}

.project-details-content {
    max-width: 170px;
    margin: 10px 0;
    display: inline-block;
    margin-bottom: 20px;
}

.posts-outer {
    display: flex;
    flex-flow: row wrap;
    justify-content: space-around;
    align-items: flex-start;
    width: 100vw;
    max-width: 800px; // change to 1400px to get columns (limited by fade container not shrinking in width, just height)
    margin: 0 auto;
}

.details-title {
    margin-bottom: 5px;
    text-transform: uppercase;
    font-size: 80%;
    float: left;
    color: $ter-type;
}

.details-text {
    text-align: left;
    display: inline-block;
    float: left;
}

$head-width: 94%;

.project-list-head {
    width: $head-width;
    background-color: $body;
    margin: 30px auto;
    margin-top: $nav-height + 50px;
    text-align: center;
    max-width: 800px;
}

.project-head-tags {
    margin: 0 auto;
    width: $head-width;
    display: flex;
    flex-flow: row wrap;
    justify-content: center;
    align-items: flex-start;
}

.project-list-head.outer {
    margin-bottom: 30px;
}

.project-list {
    text-align: center;
    margin-bottom: 80px;
}

h1.project-list-head {
    font-size: 2.5rem;
    font-weight: 400;
    text-align: left;
}

.gatsby-resp-image-figcaption {
    font-style: italic;
    font-family: $font;
    font-size: 90%;
    color: $ter-type;
    padding: 10px 0;
    margin: 0 auto;
    max-width: 650px;
}

.gatsby-resp-image-background-image {
    border-radius: $radius;
}

.gatsby-resp-image-figure {
    margin: 0;
}
